[
    {
        "type": "CMD_EXEC",
        "description": "\"MacOS 11 is installed\"",
        "cmd": "\"/usr/bin/sw_vers | /usr/bin/grep 'ProductVersion'\"",
        "expect": "\"^ProductVersion[\\\\s]*:[\\\\s]*11\\\\.\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"1.1 Verify all Apple-provided software is current\"",
        "cmd": "\"/usr/sbin/softwareupdate -l 2>&1\"",
        "expect": "\"No new software available\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.2 Enable Auto Update\"",
        "regex": "\"1\"",
        "plist_item": "\"AutomaticCheckEnabled\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.3 Enable Download new updates when available\"",
        "regex": "\"1\"",
        "plist_item": "\"AutomaticDownload\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.4 Enable app update installs\"",
        "regex": "\"1\"",
        "plist_item": "\"AutoUpdate\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.5 Enable system data files and security updates install - 'ConfigDataInstall'\"",
        "regex": "\"1\"",
        "plist_item": "\"ConfigDataInstall\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.5 Enable system data files and security updates install - 'CriticalUpdateInstall'\"",
        "regex": "\"1\"",
        "plist_item": "\"CriticalUpdateInstall\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"1.6 Enable macOS update installs\"",
        "regex": "\"1\"",
        "plist_item": "\"AutomaticallyInstallMacOSUpdates\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.1.1 Turn off Bluetooth, if no paired devices exist\"",
        "regex": "\"0\"",
        "plist_item": "\"ControllerPowerState\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.1.1 Turn off Bluetooth, if no paired devices exist\"",
        "expect": "type: MACOSX_DEFAULTS_READ",
        "regex": "\"0\"",
        "plist_item": "\"ControllerPowerState\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.1.1 Turn off Bluetooth, if no paired devices exist\"",
        "cmd": "\"/usr/sbin/system_profiler SPBluetoothDataType | /usr/bin/grep \\\"Bluetooth:\\\" -A 20 | /usr/bin/grep Connectable\"",
        "expect": "\"Connectable: Yes\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.1.2 Show Bluetooth status in menu bar\"",
        "regex": "\"18\"",
        "plist_item": "\"Bluetooth\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.2.1 Enable 'Set time and date automatically' - Set time and date automatically\"",
        "cmd": "\"/usr/sbin/systemsetup -getusingnetworktime\"",
        "expect": "\"Network Time:[\\\\s]*On\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.2.2 Ensure time set is within appropriate limits\"",
        "cmd": "\"sntp `/usr/sbin/systemsetup -getnetworktimeserver | cut -d ' ' -f 4` | grep '+/-' | cut -d ' ' -f 4,5,6\"",
        "expect": "\"^[\\\\-\\\\+]?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-6][0-9]|270)\\\\.([\\\\d]{1,6})[\\\\s]+\\\\+\\\\/\\\\-[\\\\s]+([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-6][0-9]|270)\\\\.([\\\\d]{1,6})[\\\\s]*$\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.3.1 Set an inactivity interval of 20 minutes or less for the screen saver\"",
        "regex": "\".* = ([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|1[0-1][0-9][0-9]|1200)$\"",
        "plist_item": "\"idleTime\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.3.3 Familiarize users with screen lock tools or corner to Start Screen Saver\"",
        "cmd": "\"/usr/bin/defaults read ~/Library/Preferences/com.apple.dock | /usr/bin/grep -i corner\"",
        "expect": "\"\\\".*-corner\\\"[\\\\s]*=[\\\\s]*(5|10);$\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.1 Disable Remote Apple Events\"",
        "cmd": "\"/usr/sbin/systemsetup -getremoteappleevents\"",
        "expect": "\"^Remote Apple Events:[\\\\s]*Off\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.2 Disable Internet Sharing\"",
        "cmd": "\"/usr/bin/defaults read /Library/Preferences/SystemConfiguration/com.apple.nat | /usr/bin/grep -i Enabled | /usr/bin/grep -v 0 | /usr/bin/awk '{print} END {if (NR == 0) print\\\"pass\\\"}'\"",
        "expect": "\"pass\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.3 Disable Screen Sharing\"",
        "cmd": "\"/bin/launchctl print-disabled system | /usr/bin/grep -c '\\\"com.apple.screensharing\\\" => true'\"",
        "expect": "\"1\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.4 Disable Printer Sharing\"",
        "cmd": "\"/usr/sbin/cupsctl | /usr/bin/grep _share_printers\"",
        "expect": "\"_share_printers=0\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.5 Disable Remote Login\"",
        "cmd": "\"/usr/sbin/systemsetup -getremotelogin\"",
        "expect": "\"^Remote[\\\\s]*Login:[\\\\s]*Off$\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.6 Disable DVD or CD Sharing\"",
        "cmd": "\"/bin/launchctl print-disabled system | /usr/bin/grep -c '\\\"com.apple.ODSAgent\\\" => true'\"",
        "expect": "\"1\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.4.7 Disable Bluetooth Sharing\"",
        "expect": "type: MACOSX_DEFAULTS_READ",
        "regex": "\"1\"",
        "plist_item": "\"PrefKeyServicesEnabled\"",
        "plist_option": "CAN_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.8 Disable File Sharing - AppleFileServer\"",
        "cmd": "\"/bin/launchctl list | /usr/bin/grep AppleFileServer | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.8 Disable File Sharing - SMB\"",
        "cmd": "\"/bin/launchctl print-disabled system | /usr/bin/grep -c '\\\"com.apple.smbd\\\" => true'\"",
        "expect": "\"1\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.4.9 Disable Remote Management\"",
        "cmd": "\"/bin/ps -ef | /usr/bin/egrep ARDAgent | /usr/bin/grep -v egrep | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.4.12 Ensure AirDrop Is Disabled\"",
        "regex": "\"1\"",
        "plist_item": "\"DisableAirDrop\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.5.1.1 Enable FileVault\"",
        "cmd": "\"/usr/bin/fdesetup status\"",
        "expect": "\"FileVault[\\\\s]+is[\\\\s]+On.\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.5.1.2 Ensure all user storage APFS volumes are encrypted\"",
        "cmd": "\"/usr/sbin/diskutil ap list\"",
        "expect": "\"FileVault[\\\\s]*:[\\\\s]*Yes\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.5.1.3 Ensure all user storage CoreStorage volumes are encrypted\"",
        "cmd": "\"/usr/sbin/diskutil cs list\"",
        "expect": "\"Encryption[\\\\s]+Type[\\\\s]*:[\\\\s]*AES-XTS\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.5.2.1 Enable Gatekeeper\"",
        "cmd": "\"/usr/sbin/spctl --status\"",
        "expect": "\"assessments[\\\\s]*enabled\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.5.2.2 Enable Firewall\"",
        "regex": "\"[12]\"",
        "plist_item": "\"globalstate\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.5.2.3 Enable Firewall Stealth Mode\"",
        "cmd": "\"/usr/libexec/ApplicationFirewall/socketfilterfw --getstealthmode\"",
        "expect": "\"Stealth mode enabled\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.5.6 Limit Ad tracking and personalized Ads\"",
        "regex": "\"0\"",
        "plist_item": "\"allowApplePersonalizedAdvertising\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.7.2 Time Machine Volumes Are Encrypted\"",
        "cmd": "\"/usr/bin/defaults read /Library/Preferences/com.apple.TimeMachine.plist | /usr/bin/grep LastKnownEncryptionState\"",
        "expect": "\"LastKnownEncryptionState[\\\\s]*=[\\\\s]*Encrypted\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.8 Disable Wake for network access\"",
        "cmd": "\"/usr/bin/pmset -g | /usr/bin/grep womp\"",
        "expect": "\"^[\\\\s]*womp[\\\\s]*0$\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.9 Disable Power Nap\"",
        "cmd": "\"/usr/bin/pmset -g everything | /usr/bin/grep -c 'powernap 1'\"",
        "expect": "\"0\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"2.10 Enable Secure Keyboard Entry in terminal.app\"",
        "regex": "\"1\"",
        "plist_item": "\"SecureKeyboardEntry\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"Check to see if there's an Apple T2 Security Chip on the system\"",
        "cmd": "\"system_profiler SPiBridgeDataType | awk -F: '/Model Name/ {print $NF}' | sed 's/^ *//'\"",
        "expect": "\"Apple T2 Security Chip\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.11 Ensure EFI version is valid and being regularly checked - integrity-check\"",
        "cmd": "\"/usr/libexec/firmwarecheckers/eficheck/eficheck --integrity-check\"",
        "expect": "\"No[\\\\s]+changes[\\\\s]+detected[\\\\s]+in[\\\\s]+primary[\\\\s]+hashes\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.11 Ensure EFI version is valid and being regularly checked - daemon\"",
        "cmd": "\"/bin/launchctl list | /usr/bin/grep com.apple.driver.eficheck\"",
        "expect": "\"com.apple.driver.eficheck\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.12 Automatic Actions for Optical Media\"",
        "cmd": "\"/usr/bin/defaults read com.apple.digihub\"",
        "expect": "\"Manual Review Required\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"2.13 Review Siri Settings\"",
        "cmd": "\"/usr/bin/defaults read com.apple.assistant.support.plist | grep -i 'Assistant Enabled'; /usr/bin/defaults read com.apple.Siri.plist | egrep -i '(StatusMenuVisible|VoiceTriggerUserEnabled)'\"",
        "expect": "\"Manual Review Required\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"3.1 Enable security auditing\"",
        "cmd": "\"/bin/launchctl list | /usr/bin/grep -i auditd\"",
        "expect": "\"com.apple.auditd\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"3.3 Retain install.log for 365 or more days with no maximum size - ttl\"",
        "cmd": "\"/usr/bin/grep -i install\\\\.log /etc/asl/com.apple.install | /usr/bin/grep -i ttl\"",
        "expect": "\"[Tt][Tt][Ll]=(36[5-9]|3[7-9][0-9]|[4-9]\\d{2,}|[1-9]\\d{3,})\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"3.3 Retain install.log for 365 or more days with no maximum size - all_max\"",
        "cmd": "\"/usr/bin/grep -i install\\\\.log /etc/asl/com.apple.install | /usr/bin/grep -i all_max | /usr/bin/awk '{print} END {if (NR == 0) print \\\"pass - all_max value not found\\\"; else print \\\"fail\\\"}'\"",
        "expect": "\"^pass - all_max value not found$\""
    },
    {
        "type": "FILE_CONTENT_CHECK",
        "description": "\"3.4 Ensure security auditing retention\"",
        "expect": "\"^expire-after:(([6-9][0-9]|[1-9][0-9]{2,})D|[1-9][0-9]{0,}G)\"",
        "regex": "\"^expire-after:\""
    },
    {
        "type": "FILE_CHECK",
        "description": "\"3.5 Control access to audit records - /etc/security/audit_control\""
    },
    {
        "type": "FILE_CHECK",
        "description": "\"3.5 Control access to audit records - /var/audit\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"3.6 Ensure Firewall is configured to log\"",
        "cmd": "\"/usr/libexec/ApplicationFirewall/socketfilterfw --getloggingmode | /usr/bin/grep on | /usr/bin/awk \\'{print} END {if (NR == 0) print \\\"fail\\\"}\\'\"",
        "expect": "\"Log mode is on\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"Check to see if there's a wireless adapter on the system\"",
        "cmd": "\"/usr/sbin/networksetup -listallhardwareports | /usr/bin/grep 'Hardware Port: Wi-fi'\"",
        "expect": "\"Hardware Port: Wi-fi\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"4.2 Enable 'Show Wi-Fi status in menu bar' - Show Wi-Fi status in menu bar\"",
        "expect": "type: MACOSX_DEFAULTS_READ",
        "regex": "\"18\"",
        "plist_item": "\"WiFi\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"4.4 Ensure http server is not running\"",
        "cmd": "\"/bin/launchctl print-disabled system | /usr/bin/grep -c '\\\"org.apache.httpd\\\" => true'\"",
        "expect": "\"1\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"4.5 Ensure nfs server is not running.\"",
        "cmd": "\"/bin/launchctl print-disabled system | /usr/bin/grep -c '\\\"com.apple.nfsd\\\" => true'\"",
        "expect": "\"1\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.1.1 Secure Home Folders\"",
        "cmd": "\"/usr/bin/find /Users -type d ! -perm -1000 -maxdepth 1 -a -perm +0066 | /usr/bin/egrep -v '^/Users$' | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.1.2 Check System Wide Applications for appropriate permissions\"",
        "cmd": "\"/usr/bin/find /Applications -iname '*\\.app' -type d -perm -2 -ls | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.1.3 Check System folder for world writable files\"",
        "cmd": "\"/usr/bin/find /System/Volumes/Data/System -type d -perm -2 -ls | /usr/bin/grep -v 'Public/Drop Box' | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.2.1 Configure account lockout threshold\"",
        "cmd": "\"/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A 1 '<key>policyAttributeMaximumFailedAuthentications</key>' | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1\"",
        "expect": "\"^[1-5]$\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.2.2 Set a minimum password length\"",
        "cmd": "\"/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e 'Must be a minimum of' -e 'Contain at least'\"",
        "expect": "\"(Must[\\\\s]+be[\\\\s]+a[\\\\s]+minimum[\\\\s]+of[\\\\s]+(1[5-9]|2[0-9])[\\\\s]+characters|Contain[\\\\s]+at[\\\\s]+least[\\\\s]+(1[5-9]|2[0-9])[\\\\s]+characters)\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.2.7 Password Age\"",
        "cmd": "\"/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/egrep policyAttributeExpiresEveryNDays -A1\"",
        "expect": "\"integer.*[1-9]|[1-8][0-9]|90\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.2.8 Password History\"",
        "cmd": "\"/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/egrep -A 1 '<key>policyAttributePasswordHistoryDepth</key>'\"",
        "expect": "\"<integer>(1[5-9]|[2-9][0-9])</integer>\""
    },
    {
        "type": "FILE_CONTENT_CHECK",
        "description": "\"5.3 Reduce the sudo timeout period\"",
        "expect": "\"^[\\\\s]*Defaults[\\\\s]*timestamp_timeout[\\\\s]*=[\\\\s]*0\"",
        "regex": "\"^[\\\\s]*Defaults[\\\\s]*timestamp_timeout[\\\\s]*=[\\\\s]*0\""
    },
    {
        "type": "FILE_CONTENT_CHECK_NOT",
        "description": "\"5.5 Use a separate timestamp for each user/tty combo\"",
        "expect": "\"^[\\\\s]*Defaults[\\\\s]+!tty_tickets\"",
        "regex": "\"^[\\\\s]*Defaults[\\\\s]+!tty_tickets\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.7 Do not enable the 'root' account - root account\"",
        "cmd": "\"/usr/bin/dscl . -read /Users/root AuthenticationAuthority\"",
        "expect": "\"(No such key: AuthenticationAuthority|Disabled)\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.8 Disable automatic login\"",
        "cmd": "\"/usr/bin/defaults read /Library/Preferences/com.apple.loginwindow autoLoginUser | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.11 Require an administrator password to access system-wide preferences\"",
        "cmd": "\"/usr/bin/security authorizationdb read system.preferences | /usr/bin/grep '<key>shared</key>' -A1\"",
        "expect": "\"<false/>\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.12 Ensure an administrator account cannot login to another user's active and locked session\"",
        "cmd": "\"/usr/bin/security authorizationdb read system.login.screensaver 2>&1 | /usr/bin/grep -c use-login-window-ui\"",
        "expect": "\"1\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"5.13 Create a custom message for the Login Screen\"",
        "regex": "\"This system is reserved for authorized use only and may be monitored.\"",
        "plist_item": "\"LoginwindowText\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.15 Do not enter a password-related hint\"",
        "cmd": "\"/usr/bin/dscl . -list /Users hint | /usr/bin/awk '{ if ($2) print $0\\\" - fail\\\" }' | /usr/bin/awk '{print} END {if (NR == 0) print \\\"pass\\\";}'\"",
        "expect": "\"^pass$\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.18 System Integrity Protection status\"",
        "cmd": "\"/usr/bin/csrutil status\"",
        "expect": "\"System Integrity Protection status: enabled\""
    },
    {
        "type": "CMD_EXEC",
        "description": "\"5.19 Enable Sealed System Volume (SSV)\"",
        "cmd": "\"/usr/bin/csrutil authenticated-root status\"",
        "expect": "\"Authenticated Root status: enabled\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"5.20 Enable Library Validation\"",
        "regex": "\"0\"",
        "plist_item": "\"DisableLibraryValidation\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.1.1 Display login window as name and password\"",
        "regex": "\"1\"",
        "plist_item": "\"SHOWFULLNAME\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.1.2 Disable 'Show password hints' - Show password hints\"",
        "regex": "\"0\"",
        "plist_item": "\"RetriesUntilHint\"",
        "plist_option": "CAN_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.1.3 Disable guest account login\"",
        "regex": "\"0\"",
        "plist_item": "\"GuestEnabled\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.1.4 Disable 'Allow guests to connect to shared folders' - AFP Sharing\"",
        "regex": "\"0\"",
        "plist_item": "\"guestAccess\"",
        "plist_option": "CAN_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.1.4 Disable 'Allow guests to connect to shared folders' - SMB Sharing\"",
        "regex": "\"0\"",
        "plist_item": "\"AllowGuestAccess\"",
        "plist_option": "CAN_BE_NULL"
    },
    {
        "type": "CMD_EXEC",
        "description": "\"6.1.5 Remove Guest home folder\"",
        "cmd": "\"/bin/ls /Users/ | /usr/bin/grep Guest | /usr/bin/awk '{print} END {if (NR == 0) print \\\"none\\\"}'\"",
        "expect": "\"none\""
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.2 Turn on filename extensions\"",
        "expect": "type: MACOSX_DEFAULTS_READ",
        "regex": "\"1\"",
        "plist_item": "\"AppleShowAllExtensions\"",
        "plist_option": "CANNOT_BE_NULL"
    },
    {
        "type": "MACOSX_DEFAULTS_READ",
        "description": "\"6.3 Disable the automatic run of safe files in Safari\"",
        "regex": "\"0\"",
        "plist_item": "\"AutoOpenSafeDownloads\"",
        "plist_option": "CANNOT_BE_NULL"
    }
]
